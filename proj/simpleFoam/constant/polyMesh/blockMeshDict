/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.4.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 10;

vertices
(
	(-200 -9.95929 5.75)	// 0 
	(-200 9.95929 5.75) 	// 1
	(-200 173.2050807569 100)	// 2
	(-200 -173.2050807569 100)	// 3
	(100 -9.95929 5.75)	// 4
	(100 9.95929 5.75)	// 5
	(100 173.2050807569 100)	// 6
	(100 -173.2050807569 100)	// 7
);

blocks
(
	hex (0 1 2 3 4 5 6 7) (30 40 30) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
	outlet
	{
		type	patch;
		faces
		(
			(0 1 2 3)
		);
	}

	inlet
	{
		type 	patch;
		faces
		(
			(4 5 6 7)
		);
	}
	inner
	{
	  type wall;
	  faces
	  (
	    (0 4 7 3)
	  );
	}
	outer
	{
	  type wall;
	  faces
	  (
	    (1 5 6 2)
	  );
	}
	
    /*inlet
    {
        type patch;
        faces
        (
            (13 12 21 16)
            (14 13 16 18)
            (15 14 18 20)
            (17 22 12 13)
            (23 19 14 15)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (1 4 9 0)
            (2 6 4 1)
            (3 8 6 2)
            (5 1 0 10)
            (11 3 2 7)
        );
    }
    innerWall
    {
        type wall;
        faces
        (
            (2 1 13 14)
            (5 10 22 17)
            (5 17 13 1)
            (11 7 19 23)
            (7 2 14 19)
        );
    }
    outerWall
    {
        type wall;
        faces
        (
            (4 16 21 9)
            (6 18 16 4)
            (8 20 18 6)
        );
    }
    cyclic_half0
    {
        type cyclic;
        neighbourPatch cyclic_half1;
        transform rotational;
        rotationAxis (0 0 1);
        rotationCentre (0 0 0);
        faces
        (
            (0 9 21 12)
            (10 0 12 22)
        );
    }
    cyclic_half1
    {
        type cyclic;
        neighbourPatch cyclic_half0;
        transform rotational;
        rotationAxis (0 0 1);
        rotationCentre (0 0 0);
        faces
        (
            (3 15 20 8)
            (11 23 15 3)
        );
    }
*/

);

edges
(
  arc 0 1 (-200 0 11.5)
  arc 4 5 (100 0 11.5)
  arc 2 3 (-200 0 200)
  arc 6 7 (100 0 200)
);

mergeMatchPairs
(
);

// ************************************************************************* //
